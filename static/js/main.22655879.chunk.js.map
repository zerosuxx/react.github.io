{"version":3,"sources":["logo.svg","react-auth0-spa.js","components/NavBar.js","App.js","W3skull.js","Mytable.js","mailercl.js","serviceWorker.js","utils/history.js","index.js","takeTheShoot.js","mailer.js"],"names":["module","exports","DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","Auth0Provider","children","onRedirectCallback","initOptions","useState","isAuthenticated","setIsAuthenticated","user","setUser","auth0Client","setAuth0","loading","setLoading","popupOpen","setPopupOpen","useEffect","a","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","initAuth0","loginWithPopup","params","console","error","Provider","value","getIdTokenClaims","loginWithRedirect","getTokenSilently","getTokenWithPopup","logout","NavBar","token","setToken","then","accessToken","onClick","email","App","className","src","logo","alt","href","target","rel","w3skull","props","replaceName","name","setState","username","state","header","this","type","onChange","Component","myTable","createTable","table","i","j","push","mailercl","handleEmailChange","event","handleMessageChange","message","sendMail","preventDefault","log","Form","onSubmit","bind","Group","controlId","Label","Control","placeholder","Text","as","rows","Button","variant","Boolean","hostname","match","createBrowserHistory","ReactDOM","render","domain","config","client_id","clientId","redirect_uri","origin","targetUrl","StrictMode","exact","to","activeClassName","path","component","W3skull","MyTable","show","setShow","handleClose","Modal","onHide","Header","closeButton","Title","Body","Footer","e","form","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.22655879.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// src/react-auth0-spa.js\nimport React, { useState, useEffect, useContext } from \"react\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes(\"code=\") &&\n          window.location.search.includes(\"state=\")) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p)\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};","import React, { useState } from \"react\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\n\nconst NavBar = () => {\n  const [ token, setToken ] = useState();\n  const { isAuthenticated, loginWithRedirect, logout, user, getTokenSilently } = useAuth0();\n  \n  getTokenSilently().then((accessToken) => {\n    setToken(accessToken);\n  });\n  \n  return (\n    <div>\n      {!isAuthenticated && (<button onClick={() => loginWithRedirect({})}>Log in</button>)}\n      {isAuthenticated && <button onClick={() => logout()}>Log out</button>}\n      {isAuthenticated && <p>{user.email}- {token}</p>}\n    </div>\n  );\n};\n\nexport default NavBar;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport NavBar from \"./components/NavBar\";\nimport { useAuth0 } from \"./react-auth0-spa\";\n\nfunction App() {\n  const { loading } = useAuth0();\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n        <NavBar />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\n\nclass w3skull extends React.Component {\n    constructor(props){\n        super(props);\n        this.state={username: ''};\n    }\n    replaceName = (name)=>{\n        this.setState({username: name.target.value})\n    }\n    render(){\n        let header = '';\n        if (this.state.username){\n            header = <h1>Yeah {this.state.username}</h1>\n        }else{\n            header=''\n        }\n        return(\n            <form>\n                {header}\n                < input type=\"text\" onChange={this.replaceName}/>\n            </form>\n        )\n    }\n}\n\nexport default w3skull;\n","import React from 'react';\n\nexport default class myTable extends React.Component {\n\n    createTable = () => {\n      let table = []\n  \n      // Outer loop to create parent\n      for (let i = 0; i < 3; i++) {\n        let children = []\n        //Inner loop to create children\n        for (let j = 0; j < 5; j++) {\n          children.push(<td>{`Column ${j + 1}`}</td>)\n        }\n        //Create the parent and add the children\n        table.push(<tr>{children}</tr>)\n      }\n      return table\n    }\n  \n  \n    render() {\n      return(\n        <table>\n          {this.createTable()}\n        </table>\n      )\n    }\n  \n  }","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nexport default class mailercl extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            email: '',\n            message: ''\n        } \n    }\n\n    handleEmailChange = (event)=>{\n        this.setState({email: event.target.value})\n    }\n    handleMessageChange =(event)=>{\n        this.setState({message: event.target.value})\n    }\n    sendMail =(event)=>{\n        event.preventDefault();\n        console.log(this.state)\n    }\n\n    render(){\n\n        return(\n        <>\n            <Form onSubmit={this.sendMail.bind(this)}>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control type=\"email\" name=\"email\" value={this.state.email} placeholder=\"Enter email\" onChange={this.handleEmailChange.bind(this)} />\n                    <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                    </Form.Text>\n                </Form.Group>\n                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>Example textarea</Form.Label>\n                    <Form.Control as=\"textarea\" name=\"message\" value={this.state.message} rows=\"3\" onChange={this.handleMessageChange.bind(this)} />\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n        </>\n        )\n    }\n\n\n    \n    \n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n  Link\n} from \"react-router-dom\";\nimport App from './App';\nimport W3skull from './W3skull';\nimport MyTable from './Mytable';\nimport TakeTheShoot from './takeTheShoot';\nimport mailer from './mailer';\nimport mailercl from './mailercl';\nimport * as serviceWorker from './serviceWorker';\nimport { Auth0Provider } from \"./react-auth0-spa\";\nimport config from \"./auth_config.json\";\nimport history from \"./utils/history\";\n\n// A function that routes the user to the right place\n// after login\nconst onRedirectCallback = appState => {\n  history.push(\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nReactDOM.render(\n  <Auth0Provider\n    domain={config.domain}\n    client_id={config.clientId}\n    redirect_uri={window.location.origin}\n    onRedirectCallback={onRedirectCallback}\n  >\n  <React.StrictMode>\n    <Router>\n      <div>\n        <ul>\n          <li>\n            <NavLink exact to=\"/\" activeClassName=\"active\" >\n              Home\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/w3skull\" activeClassName=\"active\" >\n              w3skull\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/mytable\" activeClassName=\"active\" >\n              mytable\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/taketheshoot\" activeClassName=\"active\" >\n              taketheshoot\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/contact\" activeClassName=\"active\" >\n              contact\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/contactcl\" activeClassName=\"active\" >\n              contactcl\n            </NavLink>\n          </li>\n        </ul>\n        <Switch>\n          <Route exact path=\"/\" component={App} />\n          <Route path=\"/w3skull\" component={W3skull} />\n          <Route path=\"/mytable\" component={MyTable} />\n          <Route path=\"/taketheshoot\" component={TakeTheShoot} />\n          <Route path=\"/contact\" component={mailer} />\n          <Route path=\"/contactcl\" component={mailercl} />\n        </Switch>\n      </div>      \n    </Router>\n    {/* <App />\n    <W3skull />\n    <MyTable /> */}\n  </React.StrictMode>\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\n\nexport default function Taketheshoot() {\n  const [show, setShow] = React.useState(true);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  \n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Launch demo modal\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Figyelmeztetés</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Elmúltál 18?</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Igen\n          </Button>\n          <a target=\"_self\" href=\"http://google.com\">\n            <Button variant=\"primary\" onClick={handleClose}>\n              Nem\n            </Button>\n          </a>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n  \n    \n}","import React,{useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nexport default function MailerForm() {\n    const [email, setemail]= useState('');\n    const [message, setMessage]= useState('');\n    const sendMail = (e) => {\n        e.preventDefault();\n    \n        const form = e.target;\n        \n\n        console.log(form);\n        \n        \n    }\n    const handleEmailChange = (e) => {\n        this.setState({email: e.target.value});\n        console.log(e.target.value);\n    }\n    const handleMessageChange = (e) => {\n        this.setState({message: e.target.value});\n        console.log(e.target.value);\n    }\n    \n    return(\n        <>\n        <Form onSubmit={sendMail}>\n        <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\" onChange={()=>this.handleEmailChange()} />\n            <Form.Text className=\"text-muted\">\n            We'll never share your email with anyone else.\n            </Form.Text>\n        </Form.Group>\n        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>Example textarea</Form.Label>\n            <Form.Control as=\"textarea\" name=\"message\" rows=\"3\" onChange={()=>this.handleMessageChange()} />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n            Submit\n        </Button>\n        </Form>\n            \n        </>\n    )\n}"],"sourceRoot":""}